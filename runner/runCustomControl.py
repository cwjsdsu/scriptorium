import os
import subprocess

def runCustomControl(exec_name, inputfile, control_template, param_dict, 
    workdir='', label='runCustom'):

    """
     Author: Oliver Gorton, 2020

     This is a function for running an executable program with a custom
     control file by replacing keywords in a template used by the executed
     code. The control file is one which is used indirectly (not a by a 
     command line pipe). For example, an interaction file for bigstick.

     exec_name: (string) containing the path to and name of the
         executable you want to run
     inputfile: (string) this is an input file used by the executable
     control_template: (string) the base-name of a file ending in '.control'. 
         "<control_template>.template" is the template file which the function 
         will edit and copy into <control_template>.
     param_dict: (dictionary) of keywords and the values to which those keywords
         will be changed. The keywords are strings which should appear in the 
         input_template file. 
     workdir: (string) name of the working directory where you want to call
         the executable and send the output.
     label: (string) name for this job, to label the input and output files 
         generated by this function.

    """

    path = os.getcwd()
    os.chdir(workdir)

    findandreplace = "sed '"
    for keyword in param_dict.keys():
        findandreplace += "s/%s/%s/g;"%(keyword,param_dict[keyword])
    findandreplace += "' %s.template > %s"%(control_template, control_template)
    returned = subprocess.call(findandreplace, shell=True)

    command = "%s < %s > %s.output"%(exec_name, inputfile, label)
    print(command)
    returned = subprocess.call(command,shell=True)

    os.chdir(path)

    return
